{"ast":null,"code":"var _jsxFileName = \"/home/user/Bootcamp/chapter10/contactBookRedux/src/components/Todo.js\";\nimport React from 'react';\nimport TodoList from './TodoList';\nimport TodoForm from './TodoForm';\n\nclass Todo extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDeleteTodo = id => {\n      // const todos = [...this.state.todos];\n      // const index = this.state.todos.findIndex(item => item.id === id);\n      // todos.splice(index, 1);\n      const todos = this.state.todos.filter(item => {\n        return item.id !== id;\n      });\n      this.setState({\n        todos\n      });\n    };\n\n    this.handleEditTodo = ({\n      id,\n      title,\n      surname,\n      number\n    }) => {\n      const index = this.state.todos.findIndex(item => item.id === id);\n      const todos = [...this.state.todos];\n      const item = { ...todos[index]\n      };\n      item.title = title;\n      item.surname = surname;\n      item.number = number;\n      todos[index] = item;\n      this.setState({\n        todos\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TodoForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TodoList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Todo; // constructor(probs){\n//     super(probs);\n//     console.log(\"CONSTRUCTOR\");\n//     // this.handleChangeStatus = this.handleChangeStatus.bind(this); //? Нужно если функция обычная, чтобы не потерять контекст.\n//     // this.state = {} //? Нельзя\n//     // this.setState() //! Можно\n//     // this.state = {\n//     //     bool: probs.bool\n//     // }\n// }\n// componentDidMount(){ //? Вызывается один раз после конструктора и render\n//     console.log(\"MOUNT\");\n//     // this.setState() //? Можно. \n// }\n// componentDidUpdate(prevProps, prevState){ //? Вызывается каждый раз когда компонент обновился\n//     console.log(\"UPDATED\", prevProps, prevState);\n//     // this.setState()//! вызывать нельзя\n//     if(prevState.todos.length > this.state.todos.length){\n//         console.log(\"todos - 1\");\n//         // this.setState()//? Можно\n//     }\n// }\n// shouldComponentUpdate(nextProbs, nextState){//? Вызывается перед обновлением \n//     console.log(\"SHOULD_UPDATE\", nextProbs, nextState);\n//     // let nextStatus = nextState.todos[1].status;\n//     // let status = this.state.todos[1].status;\n//     // if(nextStatus === false && nextStatus !==status){\n//     //     return false;\n//     // }\n//     return true;\n// }\n// componentWillUnmount(){//? вызывается когда собирается исчезнуть\n//     console.log(\"UNMPONT\");\n// }","map":{"version":3,"sources":["/home/user/Bootcamp/chapter10/contactBookRedux/src/components/Todo.js"],"names":["React","TodoList","TodoForm","Todo","Component","handleDeleteTodo","id","todos","state","filter","item","setState","handleEditTodo","title","surname","number","index","findIndex","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAGA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAkC;AAAA;AAAA;;AAAA,SAU9BC,gBAV8B,GAUVC,EAAD,IAAQ;AACvB;AACA;AACA;AACA,YAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAX,CAAiBE,MAAjB,CAAyBC,IAAD,IAAU;AAC5C,eAAOA,IAAI,CAACJ,EAAL,KAAYA,EAAnB;AACH,OAFa,CAAd;AAGA,WAAKK,QAAL,CAAc;AAACJ,QAAAA;AAAD,OAAd;AACH,KAlB6B;;AAAA,SAoB9BK,cApB8B,GAoBb,CAAC;AAACN,MAAAA,EAAD;AAAKO,MAAAA,KAAL;AAAYC,MAAAA,OAAZ;AAAqBC,MAAAA;AAArB,KAAD,KAAkC;AAC/C,YAAMC,KAAK,GAAG,KAAKR,KAAL,CAAWD,KAAX,CAAiBU,SAAjB,CAA2BP,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYA,EAA/C,CAAd;AACA,YAAMC,KAAK,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWD,KAAf,CAAd;AACA,YAAMG,IAAI,GAAG,EAAC,GAAGH,KAAK,CAACS,KAAD;AAAT,OAAb;AACAN,MAAAA,IAAI,CAACG,KAAL,GAAaA,KAAb;AACAH,MAAAA,IAAI,CAACI,OAAL,GAAeA,OAAf;AACAJ,MAAAA,IAAI,CAACK,MAAL,GAAcA,MAAd;AACAR,MAAAA,KAAK,CAACS,KAAD,CAAL,GAAeN,IAAf;AACA,WAAKC,QAAL,CAAc;AAACJ,QAAAA;AAAD,OAAd;AACH,KA7B6B;AAAA;;AAiC9BW,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAOH;;AAzC6B;;AA4ClC,eAAef,IAAf,C,CAiBA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React from 'react';\nimport TodoList from './TodoList';\nimport TodoForm from './TodoForm'\n\n\nclass Todo extends React.Component{\n    // handleChangeStatus = (id) => {\n    //     const index = this.state.todos.findIndex(item => item.id === id);\n    //     const todos = [...this.state.todos];\n    //     const item = {...todos[index]};\n    //     item.status = !item.status;\n    //     todos[index] = item;\n    //     this.setState({todos});\n    // }\n\n    handleDeleteTodo = (id) => {\n        // const todos = [...this.state.todos];\n        // const index = this.state.todos.findIndex(item => item.id === id);\n        // todos.splice(index, 1);\n        const todos = this.state.todos.filter((item) => {\n            return item.id !== id; \n        });\n        this.setState({todos});\n    }\n\n    handleEditTodo = ({id, title, surname, number}) => {\n        const index = this.state.todos.findIndex(item => item.id === id);\n        const todos = [...this.state.todos];\n        const item = {...todos[index]};\n        item.title = title;\n        item.surname = surname;\n        item.number = number;\n        todos[index] = item;\n        this.setState({todos});\n    }\n\n\n\n    render(){\n        return(\n            <div className = \"todo\">\n                <TodoForm  />\n                <TodoList \n                />\n            </div>\n        )\n    }\n}\n\nexport default Todo;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// constructor(probs){\n//     super(probs);\n//     console.log(\"CONSTRUCTOR\");\n\n//     // this.handleChangeStatus = this.handleChangeStatus.bind(this); //? Нужно если функция обычная, чтобы не потерять контекст.\n\n//     // this.state = {} //? Нельзя\n//     // this.setState() //! Можно\n\n//     // this.state = {\n//     //     bool: probs.bool\n//     // }\n// }\n\n\n// componentDidMount(){ //? Вызывается один раз после конструктора и render\n//     console.log(\"MOUNT\");\n//     // this.setState() //? Можно. \n// }\n\n// componentDidUpdate(prevProps, prevState){ //? Вызывается каждый раз когда компонент обновился\n//     console.log(\"UPDATED\", prevProps, prevState);\n\n//     // this.setState()//! вызывать нельзя\n\n//     if(prevState.todos.length > this.state.todos.length){\n//         console.log(\"todos - 1\");\n//         // this.setState()//? Можно\n//     }\n// }\n\n// shouldComponentUpdate(nextProbs, nextState){//? Вызывается перед обновлением \n//     console.log(\"SHOULD_UPDATE\", nextProbs, nextState);\n\n//     // let nextStatus = nextState.todos[1].status;\n//     // let status = this.state.todos[1].status;\n\n//     // if(nextStatus === false && nextStatus !==status){\n//     //     return false;\n//     // }\n//     return true;\n// }\n\n// componentWillUnmount(){//? вызывается когда собирается исчезнуть\n//     console.log(\"UNMPONT\");\n// }\n\n"]},"metadata":{},"sourceType":"module"}