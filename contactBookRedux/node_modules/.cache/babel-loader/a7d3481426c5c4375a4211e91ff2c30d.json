{"ast":null,"code":"var _jsxFileName = \"/home/user/Bootcamp/chapter10/contactBookRedux/src/components/TodoList.js\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport TodoItem from './TodoItem';\n\nfunction TodoList(props) {\n  const state = useSelector(state => {\n    return state.todo;\n  }); // console.log(state);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"todo-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, state.todos.map(item => /*#__PURE__*/React.createElement(TodoItem, {\n    key: item.id + \"-list-item\",\n    item: item,\n    changeStatus: props.changeStatus,\n    deleteTodo: props.deleteTodo,\n    editTodo: props.editTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default TodoList; // const [bool, setBool] = useState(true); \n// const [text, setText] = useState(\"\"); \n// //? Заменяет все жизненные циклы внутри функции. ComponentDidUpdate\n// useEffect(()=> {\n//     console.log(\"TODO_LIST UPDATE\");\n// });\n// //? СomponentDidMount\n// useEffect(()=> {\n//     console.log(\"MOUNT\");\n//     //? ComponentWillUnmount\n//     return () => {\n//         console.log(\"UNMOUNT\");\n//     }\n// }, []);\n// //? Вызывается только тогда когда меняется что-то из массива\n// useEffect(()=> {\n//     console.log(\"Bool changed\");\n// }, [bool, text]);","map":{"version":3,"sources":["/home/user/Bootcamp/chapter10/contactBookRedux/src/components/TodoList.js"],"names":["React","useSelector","TodoItem","TodoList","props","state","todo","todos","map","item","id","changeStatus","deleteTodo","editTodo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAMC,KAAK,GAAIJ,WAAW,CAACI,KAAK,IAAI;AAChC,WAAOA,KAAK,CAACC,IAAb;AACH,GAFyB,CAA1B,CADqB,CAIrB;;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,iBACjB,oBAAC,QAAD;AACI,IAAA,GAAG,EAAIA,IAAI,CAACC,EAAL,GAAU,YADrB;AAEI,IAAA,IAAI,EAAID,IAFZ;AAGI,IAAA,YAAY,EAAIL,KAAK,CAACO,YAH1B;AAII,IAAA,UAAU,EAAIP,KAAK,CAACQ,UAJxB;AAKI,IAAA,QAAQ,EAAIR,KAAK,CAACS,QALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CADJ,CADJ;AAeH;;AAED,eAAeV,QAAf,C,CAaA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\nimport TodoItem from './TodoItem'\n\nfunction TodoList(props) {\n    const state  = useSelector(state => {\n        return state.todo;\n    });\n    // console.log(state);\n\n    return (\n        <div>\n            <ul className=\"todo-list\">\n                {state.todos.map(item => (\n                    <TodoItem \n                        key = {item.id + \"-list-item\"} \n                        item = {item}\n                        changeStatus = {props.changeStatus}\n                        deleteTodo = {props.deleteTodo}\n                        editTodo = {props.editTodo}\n                    />\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nexport default TodoList\n\n\n\n\n\n\n\n\n\n\n\n\n// const [bool, setBool] = useState(true); \n// const [text, setText] = useState(\"\"); \n\n// //? Заменяет все жизненные циклы внутри функции. ComponentDidUpdate\n// useEffect(()=> {\n//     console.log(\"TODO_LIST UPDATE\");\n// });\n\n// //? СomponentDidMount\n// useEffect(()=> {\n//     console.log(\"MOUNT\");\n//     //? ComponentWillUnmount\n//     return () => {\n//         console.log(\"UNMOUNT\");\n//     }\n// }, []);\n\n// //? Вызывается только тогда когда меняется что-то из массива\n// useEffect(()=> {\n//     console.log(\"Bool changed\");\n// }, [bool, text]);"]},"metadata":{},"sourceType":"module"}