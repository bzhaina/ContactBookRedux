{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { ADD_TODO, DELETE_TODO, EDIT_TODO } from \"./constants\";\nconst INIT_TODO_STATE = {\n  todos: []\n}; // //? Как должен выглядеть action\n// action = {\n//     type: \"ADD_TODO\", \n//     payload: {\n//         id: 1,\n//         title: \"HELLO WORLD\",\n//         status: false\n//     }\n// }\n\nconst TodoReducer = (state = INIT_TODO_STATE, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return { ...state,\n        todos: [...state.todos, action.payload]\n      };\n\n    case DELETE_TODO:\n      return { ...state\n      };\n\n    case EDIT_TODO:\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  todo: TodoReducer\n});","map":{"version":3,"sources":["/home/user/Bootcamp/chapter10/contactBookRedux/src/redux/reducer.js"],"names":["combineReducers","ADD_TODO","DELETE_TODO","EDIT_TODO","INIT_TODO_STATE","todos","TodoReducer","state","action","type","payload","todo"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,SACIC,QADJ,EAEIC,WAFJ,EAGIC,SAHJ,QAIO,aAJP;AAMA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,KAAK,EAAE;AADa,CAAxB,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,eAAT,EAA0BI,MAA1B,KAAqC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,QAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHF,QAAAA,KAAK,EAAE,CACH,GAAGE,KAAK,CAACF,KADN,EAEHG,MAAM,CAACE,OAFJ;AAFJ,OAAP;;AAOJ,SAAKR,WAAL;AACI,aAAO,EAAC,GAAGK;AAAJ,OAAP;;AACJ,SAAKJ,SAAL;AACI,aAAO,EAAC,GAAGI;AAAJ,OAAP;;AAEJ;AAAS,aAAOA,KAAP;AAdb;AAgBH,CAjBD;;AAmBA,eAAeP,eAAe,CAAC;AAC3BW,EAAAA,IAAI,EAAEL;AADqB,CAAD,CAA9B","sourcesContent":["import {combineReducers} from \"redux\";\nimport {\n    ADD_TODO,\n    DELETE_TODO,\n    EDIT_TODO\n} from \"./constants\";\n\nconst INIT_TODO_STATE = {\n    todos: [],\n}\n\n// //? Как должен выглядеть action\n// action = {\n//     type: \"ADD_TODO\", \n//     payload: {\n//         id: 1,\n//         title: \"HELLO WORLD\",\n//         status: false\n//     }\n// }\n\nconst TodoReducer = (state = INIT_TODO_STATE, action) => {\n    switch (action.type) {\n        case ADD_TODO:\n            return {\n                ...state, \n                todos: [\n                    ...state.todos, \n                    action.payload\n                ]\n            };\n        case DELETE_TODO:\n            return {...state};\n        case EDIT_TODO:\n            return {...state};\n\n        default: return state;\n    }\n}\n\nexport default combineReducers({\n    todo: TodoReducer,\n})"]},"metadata":{},"sourceType":"module"}